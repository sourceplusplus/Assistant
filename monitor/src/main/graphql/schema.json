{
  "data": {
    "__schema": {
      "queryType": {
        "name": "Query"
      },
      "mutationType": {
        "name": "Mutation"
      },
      "types": [
        {
          "kind": "OBJECT",
          "name": "Query",
          "description": "Root node",
          "fields": [
            {
              "name": "version",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "checkHealth",
              "description": "Query Health Checker module for the status of OAP server",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "HealthStatus"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getAllServices",
              "description": "Normal service related metainfo",
              "args": [
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                },
                {
                  "name": "group",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Service"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "searchServices",
              "description": "",
              "args": [
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                },
                {
                  "name": "keyword",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Service"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "searchService",
              "description": "",
              "args": [
                {
                  "name": "serviceCode",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Service"
              },
              "isDeprecated": false
            },
            {
              "name": "getAllBrowserServices",
              "description": "Fetch all services of Browser type",
              "args": [
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Service"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getServiceInstances",
              "description": "Service intance query",
              "args": [
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                },
                {
                  "name": "serviceId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ServiceInstance"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "searchEndpoint",
              "description": "Endpoint query\nConsider there are huge numbers of endpoint,\nmust use endpoint owner's service id, keyword and limit filter to do query.",
              "args": [
                {
                  "name": "keyword",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                {
                  "name": "serviceId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                },
                {
                  "name": "limit",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Endpoint"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getEndpointInfo",
              "description": "",
              "args": [
                {
                  "name": "endpointId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "EndpointInfo"
              },
              "isDeprecated": false
            },
            {
              "name": "getAllDatabases",
              "description": "Database related meta info.",
              "args": [
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Database"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getTimeInfo",
              "description": "",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "TimeInfo"
              },
              "isDeprecated": false
            },
            {
              "name": "getGlobalBrief",
              "description": "Deprecated query, left only for not breaking UI for short term.",
              "args": [
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ClusterBrief"
              },
              "isDeprecated": false
            },
            {
              "name": "getGlobalTopology",
              "description": "Query the global topology",
              "args": [
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Topology"
              },
              "isDeprecated": false
            },
            {
              "name": "getServiceTopology",
              "description": "Query the topology, based on the given service",
              "args": [
                {
                  "name": "serviceId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Topology"
              },
              "isDeprecated": false
            },
            {
              "name": "getServicesTopology",
              "description": "Query the topology, based on the given services.\n`#getServiceTopology` could be replaced by this.",
              "args": [
                {
                  "name": "serviceIds",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "LIST",
                      "ofType": {
                        "kind": "NON_NULL",
                        "ofType": {
                          "kind": "SCALAR",
                          "name": "ID"
                        }
                      }
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Topology"
              },
              "isDeprecated": false
            },
            {
              "name": "getServiceInstanceTopology",
              "description": "Query the instance topology, based on the given clientServiceId and serverServiceId",
              "args": [
                {
                  "name": "clientServiceId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                },
                {
                  "name": "serverServiceId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ServiceInstanceTopology"
              },
              "isDeprecated": false
            },
            {
              "name": "getEndpointTopology",
              "description": "Query the topology, based on the given endpoint",
              "args": [
                {
                  "name": "endpointId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Topology"
              },
              "isDeprecated": false
            },
            {
              "name": "getEndpointDependencies",
              "description": "v2 of getEndpointTopology",
              "args": [
                {
                  "name": "endpointId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "EndpointTopology"
              },
              "isDeprecated": false
            },
            {
              "name": "typeOfMetrics",
              "description": "Metrics definition metadata query. Response the metrics type which determines the suitable query methods.",
              "args": [
                {
                  "name": "name",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "MetricsType"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "listMetrics",
              "description": "Get the list of all available metrics in the current OAP server.\nParam, regex, could be used to filter the metrics by name.",
              "args": [
                {
                  "name": "regex",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "MetricDefinition"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "readMetricsValue",
              "description": "Read metrics single value in the duration of required metrics",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MetricsCondition"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "readMetricsValues",
              "description": "Read time-series values in the duration of required metrics",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MetricsCondition"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetricsValues"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "sortMetrics",
              "description": "Read entity list of required metrics and parent entity type.",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TopNCondition"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SelectedRecord"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "readLabeledMetricsValues",
              "description": "Read value in the given time duration, usually as a linear.\nlabels: the labels you need to query.",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MetricsCondition"
                    }
                  }
                },
                {
                  "name": "labels",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "LIST",
                      "ofType": {
                        "kind": "NON_NULL",
                        "ofType": {
                          "kind": "SCALAR",
                          "name": "String"
                        }
                      }
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "MetricsValues"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "readHeatMap",
              "description": "Heatmap is bucket based value statistic result.",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MetricsCondition"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "HeatMap"
              },
              "isDeprecated": false
            },
            {
              "name": "readSampledRecords",
              "description": "Read the sampled records\nTopNCondition#scope is not required.",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TopNCondition"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "SelectedRecord"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getValues",
              "description": "",
              "args": [
                {
                  "name": "metric",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "BatchMetricConditions"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "IntValues"
              },
              "isDeprecated": false
            },
            {
              "name": "getLinearIntValues",
              "description": "",
              "args": [
                {
                  "name": "metric",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MetricCondition"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "IntValues"
              },
              "isDeprecated": false
            },
            {
              "name": "getMultipleLinearIntValues",
              "description": "Query the type of metrics including multiple values, and format them as multiple linears.\nThe seq of these multiple lines base on the calculation func in OAL\nSuch as, should us this to query the result of func percentile(50,75,90,95,99) in OAL,\nthen five lines will be responsed, p50 is the first element of return value.",
              "args": [
                {
                  "name": "metric",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MetricCondition"
                    }
                  }
                },
                {
                  "name": "numOfLinear",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IntValues"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getSubsetOfMultipleLinearIntValues",
              "description": "",
              "args": [
                {
                  "name": "metric",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MetricCondition"
                    }
                  }
                },
                {
                  "name": "linearIndex",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "LIST",
                      "ofType": {
                        "kind": "NON_NULL",
                        "ofType": {
                          "kind": "SCALAR",
                          "name": "Int"
                        }
                      }
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "IntValues"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getThermodynamic",
              "description": "",
              "args": [
                {
                  "name": "metric",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MetricCondition"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Thermodynamic"
              },
              "isDeprecated": false
            },
            {
              "name": "getServiceTopN",
              "description": "TopN is an aggregation query.",
              "args": [
                {
                  "name": "name",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                {
                  "name": "topN",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                },
                {
                  "name": "order",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "ENUM",
                      "name": "Order"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TopNEntity"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getAllServiceInstanceTopN",
              "description": "",
              "args": [
                {
                  "name": "name",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                {
                  "name": "topN",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                },
                {
                  "name": "order",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "ENUM",
                      "name": "Order"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TopNEntity"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getServiceInstanceTopN",
              "description": "",
              "args": [
                {
                  "name": "serviceId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                },
                {
                  "name": "name",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                {
                  "name": "topN",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                },
                {
                  "name": "order",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "ENUM",
                      "name": "Order"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TopNEntity"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getAllEndpointTopN",
              "description": "",
              "args": [
                {
                  "name": "name",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                {
                  "name": "topN",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                },
                {
                  "name": "order",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "ENUM",
                      "name": "Order"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TopNEntity"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getEndpointTopN",
              "description": "",
              "args": [
                {
                  "name": "serviceId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                },
                {
                  "name": "name",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                {
                  "name": "topN",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int"
                    }
                  }
                },
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                },
                {
                  "name": "order",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "ENUM",
                      "name": "Order"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TopNEntity"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getTopNRecords",
              "description": "",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "TopNRecordsCondition"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "TopNRecord"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "queryBasicTraces",
              "description": "",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "TraceQueryCondition"
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "TraceBrief"
              },
              "isDeprecated": false
            },
            {
              "name": "queryTrace",
              "description": "",
              "args": [
                {
                  "name": "traceId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Trace"
              },
              "isDeprecated": false
            },
            {
              "name": "getAlarmTrend",
              "description": "",
              "args": [
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "AlarmTrend"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getAlarm",
              "description": "",
              "args": [
                {
                  "name": "duration",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Duration"
                    }
                  }
                },
                {
                  "name": "scope",
                  "description": "",
                  "type": {
                    "kind": "ENUM",
                    "name": "Scope"
                  }
                },
                {
                  "name": "keyword",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                },
                {
                  "name": "paging",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "Pagination"
                    }
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Alarms"
              },
              "isDeprecated": false
            },
            {
              "name": "supportQueryLogsByKeywords",
              "description": "Return true if the current storage implementation supports fuzzy query for logs.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "queryLogs",
              "description": "",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "LogQueryCondition"
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Logs"
              },
              "isDeprecated": false
            },
            {
              "name": "getProfileTaskList",
              "description": "query all task list, order by ProfileTask#startTime descending",
              "args": [
                {
                  "name": "serviceId",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "ID"
                  }
                },
                {
                  "name": "endpointName",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProfileTask"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getProfileTaskSegmentList",
              "description": "query all task profiled segment list",
              "args": [
                {
                  "name": "taskID",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "BasicTrace"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getProfiledSegment",
              "description": "query profiled segemnt",
              "args": [
                {
                  "name": "segmentId",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ProfiledSegment"
              },
              "isDeprecated": false
            },
            {
              "name": "getProfileAnalyze",
              "description": "analyze profiled segment, start and end time use timestamp(millisecond)",
              "args": [
                {
                  "name": "segmentId",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                },
                {
                  "name": "timeRanges",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "LIST",
                      "ofType": {
                        "kind": "NON_NULL",
                        "ofType": {
                          "kind": "INPUT_OBJECT",
                          "name": "ProfileAnalyzeTimeRange"
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProfileAnalyzation"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "getAllTemplates",
              "description": "Read all configuration templates for dashboard and topology pages.\nDashboard could have multiple options and partial actived.\nTopology templates should be unique for every typs, if more than one exists, UI should choose one only.\n\nincludingDisabled represents whether includes the disabled templates in the query result. Default value is false.\nMostly, should not include, but in the management page, should consider support this.",
              "args": [
                {
                  "name": "includingDisabled",
                  "description": "",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean"
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "DashboardConfiguration"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "queryBrowserErrorLogs",
              "description": "",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "BrowserErrorLogQueryCondition"
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "BrowserErrorLogs"
              },
              "isDeprecated": false
            },
            {
              "name": "queryEvents",
              "description": "",
              "args": [
                {
                  "name": "condition",
                  "description": "",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "EventQueryCondition"
                  }
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Events"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "SCALAR",
          "name": "String",
          "description": "Built-in String"
        },
        {
          "kind": "SCALAR",
          "name": "ID",
          "description": "Built-in ID"
        },
        {
          "kind": "SCALAR",
          "name": "Int",
          "description": "Built-in Int"
        },
        {
          "kind": "SCALAR",
          "name": "Long",
          "description": "Long type"
        },
        {
          "kind": "SCALAR",
          "name": "Boolean",
          "description": "Built-in Boolean"
        },
        {
          "kind": "OBJECT",
          "name": "Mutation",
          "description": "",
          "fields": [
            {
              "name": "version",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "createProfileTask",
              "description": "crate new profile task",
              "args": [
                {
                  "name": "creationRequest",
                  "description": "",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProfileTaskCreationRequest"
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProfileTaskCreationResult"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "addTemplate",
              "description": "",
              "args": [
                {
                  "name": "setting",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DashboardSetting"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TemplateChangeStatus"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "changeTemplate",
              "description": "",
              "args": [
                {
                  "name": "setting",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DashboardSetting"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TemplateChangeStatus"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "disableTemplate",
              "description": "",
              "args": [
                {
                  "name": "name",
                  "description": "",
                  "type": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TemplateChangeStatus"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "HealthStatus",
          "description": "",
          "fields": [
            {
              "name": "score",
              "description": "0 means healthy, more than 0 means unhealthy\nand less than 0 means oap doesn't startup.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "details",
              "description": "some details about the score value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Service",
          "description": "",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "group",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ServiceInstance",
          "description": "",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "attributes",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Attribute"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "language",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "Language"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "instanceUUID",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Endpoint",
          "description": "",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "EndpointInfo",
          "description": "",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceName",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Database",
          "description": "",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "TimeInfo",
          "description": "",
          "fields": [
            {
              "name": "timezone",
              "description": "server current timezone, format: +0800",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "currentTimestamp",
              "description": "server current timestamp, format: 1569124528392",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Long"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ClusterBrief",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nQuery the cluster brief based on the given duration",
          "fields": [
            {
              "name": "numOfService",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "numOfEndpoint",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "numOfDatabase",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "numOfCache",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "numOfMQ",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Topology",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nThe overview topology of the whole application cluster or services,",
          "fields": [
            {
              "name": "nodes",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Node"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "calls",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Call"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ServiceInstanceTopology",
          "description": "The instance topology based on the given serviceIds",
          "fields": [
            {
              "name": "nodes",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ServiceInstanceNode"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "calls",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Call"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "EndpointTopology",
          "description": "The endpoint topology",
          "fields": [
            {
              "name": "nodes",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "EndpointNode"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "calls",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Call"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "MetricDefinition",
          "description": "Define the metrics provided in the OAP server.",
          "fields": [
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "MetricsType"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "catalog",
              "description": "Catalog includes\nSERVICE_CATALOG,SERVICE_INSTANCE_CATALOG,ENDPOINT_CATALOG,\nSERVICE_RELATION_CATALOG,SERVICE_INSTANCE_RELATION_CATALOG_NAME,ENDPOINT_RELATION_CATALOG_NAME",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "MetricsValues",
          "description": "",
          "fields": [
            {
              "name": "label",
              "description": "Could be null if no label assigned in the query condition",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "values",
              "description": "Values of this label value.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "IntValues"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "SelectedRecord",
          "description": "",
          "fields": [
            {
              "name": "name",
              "description": "Literal string name for visualization",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "id",
              "description": "ID represents the owner of this entity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "value",
              "description": "Usually an integer value as this is metrics.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "refId",
              "description": "Have value, Only if the record has related trace id.\nUI should show this as an attached value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "HeatMap",
          "description": "",
          "fields": [
            {
              "name": "values",
              "description": "Each element of values matches the time point of the query duration.\nThe element in the IntValues represents the value of the same index bucket",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "HeatMapColumn"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "buckets",
              "description": "Bucket describes the ranges of #values represent.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Bucket"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "IntValues",
          "description": "",
          "fields": [
            {
              "name": "values",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "KVInt"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Thermodynamic",
          "description": "",
          "fields": [
            {
              "name": "nodes",
              "description": "Each element in nodes represents a point in Thermodynamic Diagram\nAnd the element includes three values:\n1) Time Bucket based on query duration\n2) Response time index.\nResponse time = [responseTimeStep * index, responseTimeStep * (index+1))\nThe last element: [Response Time * index, MAX)\n3) The number of calls in this response time duration.\n\nExample:\n[ [0, 0, 10], [0, 1, 43], ...]\nThese ^^^ two represent the left bottom element, and another element above it.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "LIST",
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "Int"
                      }
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "axisYStep",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "TopNEntity",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nLegacy metrics query protocol\nReplaced by the metrics-v2 in the future",
          "fields": [
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "value",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "TopNRecord",
          "description": "",
          "fields": [
            {
              "name": "statement",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "latency",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "traceId",
              "description": "Have value, Only if the record has the trace id.\nSlow record",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "TraceBrief",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nThe list of traces",
          "fields": [
            {
              "name": "traces",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "BasicTrace"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "total",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Trace",
          "description": "The trace represents a distributed trace, includes all segments and spans.",
          "fields": [
            {
              "name": "spans",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Span"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "AlarmTrend",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nthe trend alarm trigger times",
          "fields": [
            {
              "name": "numOfAlarm",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int"
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Alarms",
          "description": "",
          "fields": [
            {
              "name": "msgs",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "AlarmMessage"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "total",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Logs",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nThe list of logs",
          "fields": [
            {
              "name": "logs",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Log"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "total",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ProfileTask",
          "description": "Profile",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceId",
              "description": "monitor service",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceName",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "endpointName",
              "description": "endpoint name to monitored under the special service.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "startTime",
              "description": "task start time (timestamp)",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "duration",
              "description": "duration of this task (minute)",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "minDurationThreshold",
              "description": "when the segment starts to execute, how long must it take before the monitor can be enbaled",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "dumpPeriod",
              "description": "when start monitor, time interval for each dumping the stack",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "maxSamplingCount",
              "description": "max number of traces will monitor on the sniffer",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "logs",
              "description": "instance operation logs",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProfileTaskLog"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "BasicTrace",
          "description": "Trace basic info",
          "fields": [
            {
              "name": "segmentId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "endpointNames",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "duration",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "start",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "isError",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              },
              "isDeprecated": false
            },
            {
              "name": "traceIds",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ProfiledSegment",
          "description": "",
          "fields": [
            {
              "name": "spans",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProfiledSpan"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ProfileAnalyzation",
          "description": "Profile analyze result",
          "fields": [
            {
              "name": "tip",
              "description": "if not empty means backend has information gave to the user\nsuch as: a large number of snapshots, only analyze part of the data",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "trees",
              "description": "thread stack dump analyze trees",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProfileStackTree"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "DashboardConfiguration",
          "description": "",
          "fields": [
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "TemplateType"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "configuration",
              "description": "JSON based configuration. The format of text is the export result on the UI page.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "activated",
              "description": "Activated means this configuration should effect directly.\nIf the name is already used in the browser storage, the UI decides the behaviour, override/ignore/user-confirmation.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "disabled",
              "description": "Disable means this template is not working.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "BrowserErrorLogs",
          "description": "The list of browser error log",
          "fields": [
            {
              "name": "logs",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "BrowserErrorLog"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "total",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Events",
          "description": "",
          "fields": [
            {
              "name": "events",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Event"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "total",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ProfileTaskCreationResult",
          "description": "Profile task create result",
          "fields": [
            {
              "name": "errorReason",
              "description": "if null or empty means the task create success, otherwise get create error reason",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "id",
              "description": "get data id when create success",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "TemplateChangeStatus",
          "description": "",
          "fields": [
            {
              "name": "status",
              "description": "True means change successfully.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "message",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Attribute",
          "description": "",
          "fields": [
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "value",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Node",
          "description": "Node in Topology",
          "fields": [
            {
              "name": "id",
              "description": "The global id of each node,\n1. Service id\n2. Endpoint id",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "description": "The literal name of the #id.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "The type name may be\n1. The service provider/middleware tech, such as: Tomcat, SpringMVC\n2. Conjectural Service, e.g. MySQL, Redis, Kafka",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "isReal",
              "description": "It is a conjuecture node or real node, to represent a service or endpoint.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Call",
          "description": "The Call represents a directed distributed call,\nfrom the `source` to the `target`.",
          "fields": [
            {
              "name": "source",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "sourceComponents",
              "description": "The protocol and tech stack used at source side in this distributed call",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "target",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "targetComponents",
              "description": "The protocol and tech stack used at target side in this distributed call",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "detectPoints",
              "description": "The detect Points of this distributed call.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "ENUM",
                      "name": "DetectPoint"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ServiceInstanceNode",
          "description": "Node in ServiceInstanceTopology",
          "fields": [
            {
              "name": "id",
              "description": "The instance id of each node,",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "description": "The literal name of the #id. Instance Name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceId",
              "description": "Service id",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceName",
              "description": "The literal name of the #serviceId.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "The type name may be\n1. The service provider/middleware tech, such as: Tomcat, SpringMVC\n2. Conjectural Service, e.g. MySQL, Redis, Kafka",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "isReal",
              "description": "It is a conjuecture node or real node, to represent an instance.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "EndpointNode",
          "description": "Node in EndpointTopology",
          "fields": [
            {
              "name": "id",
              "description": "The instance id of each node,",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "description": "The literal name of the #id. Endpoint Name",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceId",
              "description": "Service id",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceName",
              "description": "The literal name of the #serviceId.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "The type name may be\n1. The service provider/middleware tech, such as: Tomcat, SpringMVC\n2. Conjectural Service, e.g. MySQL, Redis, Kafka",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "isReal",
              "description": "It is a conjuecture node or real node, to represent an instance.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "HeatMapColumn",
          "description": "",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "values",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Long"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Bucket",
          "description": "Bucket represents the value range.",
          "fields": [
            {
              "name": "min",
              "description": "Usually the number represents the min value of this bucket,\ncould be `infinite-` string as unbounded value",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "max",
              "description": "Usually the number represents the max value of this bucket,\ncould be `infinite+` string as unbounded value",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "KVInt",
          "description": "",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "value",
              "description": "This is the value, the caller must understand the Unit.\nSuch as:\n1. If ask for cpm metric, the unit and result should be count.\n2. If ask for response time (p99 or avg), the unit should be millisecond.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Span",
          "description": "",
          "fields": [
            {
              "name": "traceId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "segmentId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "spanId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "parentSpanId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "refs",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Ref"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceCode",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceInstanceName",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "startTime",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "endTime",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "endpointName",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "There are three span types: Local, Entry and Exit",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "peer",
              "description": "Peer network id, e.g. host+port, ip+port",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "component",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "isError",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              },
              "isDeprecated": false
            },
            {
              "name": "layer",
              "description": "There are 5 layers: Unknown, Database, RPCFramework, Http, MQ and Cache",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "tags",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "KeyValue"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "logs",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "LogEntity"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "AlarmMessage",
          "description": "",
          "fields": [
            {
              "name": "startTime",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "scope",
              "description": "",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "Scope"
              },
              "isDeprecated": false
            },
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "message",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Log",
          "description": "Log info",
          "fields": [
            {
              "name": "serviceName",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "serviceId",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              },
              "isDeprecated": false
            },
            {
              "name": "serviceInstanceName",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "serviceInstanceId",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              },
              "isDeprecated": false
            },
            {
              "name": "endpointName",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "endpointId",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              },
              "isDeprecated": false
            },
            {
              "name": "traceId",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "timestamp",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "contentType",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "ContentType"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "content",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "tags",
              "description": "",
              "args": [],
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "KeyValue"
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ProfileTaskLog",
          "description": "Profile task execute log",
          "fields": [
            {
              "name": "id",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "instanceId",
              "description": "execute instance",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "instanceName",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "operationType",
              "description": "operation type",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "ProfileTaskLogOperationType"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "operationTime",
              "description": "operation time",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ProfiledSpan",
          "description": "",
          "fields": [
            {
              "name": "spanId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "parentSpanId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceCode",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceInstanceName",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "startTime",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "endTime",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "endpointName",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "There are three span types: Local, Entry and Exit",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "peer",
              "description": "Peer network id, e.g. host+port, ip+port",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "component",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "isError",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              },
              "isDeprecated": false
            },
            {
              "name": "layer",
              "description": "There are 5 layers: Unknown, Database, RPCFramework, Http, MQ and Cache",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "tags",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "KeyValue"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "logs",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "LogEntity"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ProfileStackTree",
          "description": "Profile thread stack anayze tree",
          "fields": [
            {
              "name": "elements",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ProfileStackElement"
                    }
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "BrowserErrorLog",
          "description": "Represent the browser error log",
          "fields": [
            {
              "name": "service",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "serviceVersion",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "time",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "pagePath",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "category",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "ErrorCategory"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "grade",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "message",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "line",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int"
              },
              "isDeprecated": false
            },
            {
              "name": "col",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int"
              },
              "isDeprecated": false
            },
            {
              "name": "stack",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "errorUrl",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "firstReportedError",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Event",
          "description": "",
          "fields": [
            {
              "name": "uuid",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "source",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Source"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "EventType"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "message",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "parameters",
              "description": "",
              "args": [],
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "KeyValue"
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "startTime",
              "description": "The start time (in milliseconds) of the event, measured between the current time and midnight, January 1, 1970 UTC.\nThis field may be 0 if the user didn't report it or the `start` event is lost due to network issues.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "endTime",
              "description": "The end time (in milliseconds) of the event, measured between the current time and midnight, January 1, 1970 UTC. Empty or 0 if the event have not finished yet.\nThis field may be 0 if the user didn't report it or the `end` event is lost due to network issues.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Long"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Ref",
          "description": "Ref represents the link between the segment and its parents.\nThe parent(ref) may not exists, which means batch process.\nThe UI should display a list, representing the other trace IDs.",
          "fields": [
            {
              "name": "traceId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "parentSegmentId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "parentSpanId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "description": "Ref type represents why did the ref happen.\nInclude: 1) CrossProcess 2) CrossThread",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "RefType"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "KeyValue",
          "description": "String key, String value pair.",
          "fields": [
            {
              "name": "key",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "value",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "LogEntity",
          "description": "",
          "fields": [
            {
              "name": "time",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "data",
              "description": "",
              "args": [],
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "KeyValue"
                  }
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "ProfileStackElement",
          "description": "Profile thread stack anayze tree element",
          "fields": [
            {
              "name": "id",
              "description": "work for tree building, id matches multiple parentId",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "parentId",
              "description": "",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "codeSignature",
              "description": "stack code signature",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "duration",
              "description": "Include the execution time of children(millisecond)",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "durationChildExcluded",
              "description": "Exclude  the execution time of children(millisecond)",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "count",
              "description": "continuous dump count",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "Source",
          "description": "",
          "fields": [
            {
              "name": "service",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "serviceInstance",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "endpoint",
              "description": "",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "Duration",
          "description": "The Duration defines the start and end time for each query operation.\nFields: `start` and `end`\nrepresents the time span. And each of them matches the step.\nref https://www.ietf.org/rfc/rfc3339.txt\nThe time formats are\n`SECOND` step: yyyy-MM-dd HHmmss\n`MINUTE` step: yyyy-MM-dd HHmm\n`HOUR` step: yyyy-MM-dd HH\n`DAY` step: yyyy-MM-dd\n`MONTH` step: yyyy-MM\nField: `step`\nrepresents the accurate time point.\ne.g.\nif step==HOUR , start=2017-11-08 09, end=2017-11-08 19\nthen\nmetrics from the following time points expected\n2017-11-08 9:00 -> 2017-11-08 19:00\nthere are 11 time points (hours) in the time span.",
          "inputFields": [
            {
              "name": "start",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "end",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "step",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "Step"
                }
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MetricsCondition",
          "description": "",
          "inputFields": [
            {
              "name": "name",
              "description": "Metrics name, which should be defined in OAL script\nSuch as:\nEndpoint_avg = from(Endpoint.latency).avg()\nThen, `Endpoint_avg`",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "entity",
              "description": "Follow entity definition description.",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "Entity"
                }
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "Entity",
          "description": "",
          "inputFields": [
            {
              "name": "scope",
              "description": "1. scope=All, no name is required.\n2. scope=Service, ServiceInstance and Endpoint, set neccessary serviceName/serviceInstanceName/endpointName\n3. Scope=ServiceRelation, ServiceInstanceRelation and EndpointRelation\nserviceName/serviceInstanceName/endpointName is/are the source(s)\ndestServiceName/destServiceInstanceName/destEndpointName is/are destination(s)\nset necessary names of sources and destinations.",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "Scope"
                }
              }
            },
            {
              "name": "serviceName",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "normal",
              "description": "Normal service is the service having installed agent or metrics reported directly.\nUnnormal service is conjectural service, usually detected by the agent.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            },
            {
              "name": "serviceInstanceName",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "endpointName",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "destServiceName",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "destNormal",
              "description": "Normal service is the service having installed agent or metrics reported directly.\nUnnormal service is conjectural service, usually detected by the agent.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            },
            {
              "name": "destServiceInstanceName",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "destEndpointName",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TopNCondition",
          "description": "",
          "inputFields": [
            {
              "name": "name",
              "description": "Metrics name",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "parentService",
              "description": "Could be null if query the global top N.",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "normal",
              "description": "Normal service is the service having installed agent or metrics reported directly.\nUnnormal service is conjectural service, usually detected by the agent.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            },
            {
              "name": "scope",
              "description": "Indicate the metrics entity scope.\nThis is required in sortMetrics query.\nOnly accept scope = Service/ServiceInstance/Endpoint, ignore others due to those are pointless.",
              "type": {
                "kind": "ENUM",
                "name": "Scope"
              }
            },
            {
              "name": "topN",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              }
            },
            {
              "name": "order",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "Order"
                }
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BatchMetricConditions",
          "description": "",
          "inputFields": [
            {
              "name": "name",
              "description": "Metric name, which should be defined in OAL script\nSuch as:\nEndpoint_avg = from(Endpoint.latency).avg()\nThen, `Endpoint_avg`",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "ids",
              "description": "Id in this metric type.\nIn the above case, the id should be endpoint id.",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID"
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "MetricCondition",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nLegacy metrics query protocol\nReplaced by the metrics-v2 in the future",
          "inputFields": [
            {
              "name": "name",
              "description": "Metric name, which should be defined in OAL script\nSuch as:\nEndpoint_avg = from(Endpoint.latency).avg()\nThen, `Endpoint_avg`",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "id",
              "description": "Id in this metric type.\nIn the above case, the id should be endpoint id.",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TopNRecordsCondition",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nTop N record query is different with aggregation Query.\nBoth of query results are top N, but aggregation topN query needs to do aggregation at query stage,\nthe top N record query is just do order and get the list.\nLegacy metrics query protocol\nReplaced by the metrics-v2 in the future\nTop N query is based on latency order by given service and metric name.",
          "inputFields": [
            {
              "name": "serviceId",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              }
            },
            {
              "name": "metricName",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "topN",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              }
            },
            {
              "name": "order",
              "description": "Top N order, ASC or DES.",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "Order"
                }
              }
            },
            {
              "name": "duration",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "Duration"
                }
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TraceQueryCondition",
          "description": "Represent the conditions used for query TraceBrief",
          "inputFields": [
            {
              "name": "serviceId",
              "description": "The value of 0 means all services.",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            {
              "name": "serviceInstanceId",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            {
              "name": "traceId",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "endpointId",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            {
              "name": "endpointName",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "queryDuration",
              "description": "The time range of traces started",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "Duration"
              }
            },
            {
              "name": "minTraceDuration",
              "description": "The mix time of trace",
              "type": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            {
              "name": "maxTraceDuration",
              "description": "The max time of trace",
              "type": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            {
              "name": "traceState",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "TraceState"
                }
              }
            },
            {
              "name": "queryOrder",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "QueryOrder"
                }
              }
            },
            {
              "name": "tags",
              "description": "Map to the tags included in the traces",
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "SpanTag"
                  }
                }
              }
            },
            {
              "name": "paging",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "Pagination"
                }
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SpanTag",
          "description": "",
          "inputFields": [
            {
              "name": "key",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "value",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "Pagination",
          "description": "",
          "inputFields": [
            {
              "name": "pageNum",
              "description": "pageNum starts in 1, the default is 1.",
              "type": {
                "kind": "SCALAR",
                "name": "Int"
              }
            },
            {
              "name": "pageSize",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              }
            },
            {
              "name": "needTotal",
              "description": "default false",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LogQueryCondition",
          "description": "Represent the conditions used for query logs",
          "inputFields": [
            {
              "name": "serviceId",
              "description": "The value of 0 means all services.",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            {
              "name": "serviceInstanceId",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            {
              "name": "endpointId",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            {
              "name": "endpointName",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "relatedTrace",
              "description": "Related trace condition.\nWhen use related trace condition, duration is not required.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "TraceScopeCondition"
              }
            },
            {
              "name": "queryDuration",
              "description": "The time range of log happened\n[Required] duration is required in most query, only exception is when use relatedTrace.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "Duration"
              }
            },
            {
              "name": "paging",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "Pagination"
                }
              }
            },
            {
              "name": "tags",
              "description": "",
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "LogTag"
                  }
                }
              }
            },
            {
              "name": "keywordsOfContent",
              "description": "Fuzzy query conditions for the log content.\nUse these 2 keyword related condition, when supportQueryLogsByKeywords returns TRUE.",
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            {
              "name": "excludingKeywordsOfContent",
              "description": "",
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String"
                  }
                }
              }
            },
            {
              "name": "queryOrder",
              "description": "Order by timestamp, default desc",
              "type": {
                "kind": "ENUM",
                "name": "Order"
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "TraceScopeCondition",
          "description": "Trace related condition",
          "inputFields": [
            {
              "name": "traceId",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "segmentId",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "spanId",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "Int"
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "LogTag",
          "description": "",
          "inputFields": [
            {
              "name": "key",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "value",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProfileAnalyzeTimeRange",
          "description": "",
          "inputFields": [
            {
              "name": "start",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              }
            },
            {
              "name": "end",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Long"
                }
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "BrowserErrorLogQueryCondition",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nRepresent the conditions used for query BrowserErrorLogBrief",
          "inputFields": [
            {
              "name": "serviceId",
              "description": "The value of 0 means all services.",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            {
              "name": "serviceVersionId",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            {
              "name": "pagePathId",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "ID"
              }
            },
            {
              "name": "pagePath",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "category",
              "description": "",
              "type": {
                "kind": "ENUM",
                "name": "ErrorCategory"
              }
            },
            {
              "name": "queryDuration",
              "description": "The time range of browser perf data time",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "Duration"
              }
            },
            {
              "name": "paging",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "Pagination"
                }
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "EventQueryCondition",
          "description": "",
          "inputFields": [
            {
              "name": "uuid",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "source",
              "description": "",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "SourceInput"
              }
            },
            {
              "name": "name",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "type",
              "description": "",
              "type": {
                "kind": "ENUM",
                "name": "EventType"
              }
            },
            {
              "name": "time",
              "description": "",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "Duration"
              }
            },
            {
              "name": "order",
              "description": "",
              "type": {
                "kind": "ENUM",
                "name": "Order"
              }
            },
            {
              "name": "size",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "Int"
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "SourceInput",
          "description": "",
          "inputFields": [
            {
              "name": "service",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "serviceInstance",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            },
            {
              "name": "endpoint",
              "description": "",
              "type": {
                "kind": "SCALAR",
                "name": "String"
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "ProfileTaskCreationRequest",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nProfile task create need data",
          "inputFields": [
            {
              "name": "serviceId",
              "description": "need to monitor service id",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              }
            },
            {
              "name": "endpointName",
              "description": "endpoint name to monitored under the special service.",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "startTime",
              "description": "if null means the task starts ASAP, otherwise the task begin after the startTime(based on agent side time)",
              "type": {
                "kind": "SCALAR",
                "name": "Long"
              }
            },
            {
              "name": "duration",
              "description": "duration of this task (minute)",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              }
            },
            {
              "name": "minDurationThreshold",
              "description": "when the segment starts to execute, how long must it take before the monitor can be enbaled",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              }
            },
            {
              "name": "dumpPeriod",
              "description": "when start monitor, time interval for each dumping the stack",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              }
            },
            {
              "name": "maxSamplingCount",
              "description": "max number of traces will monitor on the sniffer",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int"
                }
              }
            }
          ]
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "DashboardSetting",
          "description": "",
          "inputFields": [
            {
              "name": "name",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "type",
              "description": "",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "TemplateType"
                }
              }
            },
            {
              "name": "configuration",
              "description": "JSON based configuration. The format of text is the export result on the UI page.",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              }
            },
            {
              "name": "active",
              "description": "Active means this configuration should display directly.\nIf the name is already used in the browser storage, the UI decides the behaviour, override/ignore/user-confirmation.",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              }
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "Step",
          "description": "",
          "enumValues": [
            {
              "name": "DAY",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "HOUR",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "MINUTE",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "SECOND",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "MetricsType",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nMetrics v2 query protocol is an alternative metrics query(s) of original v1,\ndefined in the metric.graphql, top-n-records.graphqls, and aggregation.graphqls.\nBy leveraging the new ID rule(no register) in the v8, we could query metrics based on name(s) directly.\nMetrics type is a new concept since v8.",
          "enumValues": [
            {
              "name": "UNKNOWN",
              "description": "Can't find the metrics type definition.",
              "isDeprecated": false
            },
            {
              "name": "REGULAR_VALUE",
              "description": "Regular value type is suitable for readMetricsValue, readMetricsValues and sortMetrics",
              "isDeprecated": false
            },
            {
              "name": "LABELED_VALUE",
              "description": "Metrics value includes multiple labels, is suitable for readLabeledMetricsValues\nLabel should be assigned before the query happens, such as at the setting stage",
              "isDeprecated": false
            },
            {
              "name": "HEATMAP",
              "description": "Heatmap value suitable for readHeatMap",
              "isDeprecated": false
            },
            {
              "name": "SAMPLED_RECORD",
              "description": "Top metrics is for readSampledRecords only.",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "Scope",
          "description": "",
          "enumValues": [
            {
              "name": "All",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "Service",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "ServiceInstance",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "Endpoint",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "ServiceRelation",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "ServiceInstanceRelation",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "EndpointRelation",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "Order",
          "description": "",
          "enumValues": [
            {
              "name": "ASC",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "DES",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "TraceState",
          "description": "",
          "enumValues": [
            {
              "name": "ALL",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "SUCCESS",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "ERROR",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "QueryOrder",
          "description": "",
          "enumValues": [
            {
              "name": "BY_START_TIME",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "BY_DURATION",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "ErrorCategory",
          "description": "",
          "enumValues": [
            {
              "name": "ALL",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "AJAX",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "RESOURCE",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "VUE",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "PROMISE",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "JS",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "UNKNOWN",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "EventType",
          "description": "",
          "enumValues": [
            {
              "name": "Normal",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "Error",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "TemplateType",
          "description": "Licensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\nDashboard Configuration provides the management capabilities for SkyWalking native UI.",
          "enumValues": [
            {
              "name": "DASHBOARD",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "TOPOLOGY_SERVICE",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "TOPOLOGY_INSTANCE",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "TOPOLOGY_ENDPOINT",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "TOPOLOGY_SERVICE_RELATION",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "TOPOLOGY_SERVICE_INSTANCE_RELATION",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "Language",
          "description": "",
          "enumValues": [
            {
              "name": "UNKNOWN",
              "description": "For not language based agent, the language is impossible to tell.",
              "isDeprecated": false
            },
            {
              "name": "JAVA",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "DOTNET",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "NODEJS",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "PYTHON",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "RUBY",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "GO",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "LUA",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "PHP",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "DetectPoint",
          "description": "",
          "enumValues": [
            {
              "name": "CLIENT",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "SERVER",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "PROXY",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "ContentType",
          "description": "",
          "enumValues": [
            {
              "name": "TEXT",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "JSON",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "YAML",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "ProfileTaskLogOperationType",
          "description": "Profile task log operation type",
          "enumValues": [
            {
              "name": "NOTIFIED",
              "description": "when sniffer has notified",
              "isDeprecated": false
            },
            {
              "name": "EXECUTION_FINISHED",
              "description": "when sniffer has execution finished to report",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "ENUM",
          "name": "RefType",
          "description": "",
          "enumValues": [
            {
              "name": "CROSS_PROCESS",
              "description": "",
              "isDeprecated": false
            },
            {
              "name": "CROSS_THREAD",
              "description": "",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "__Schema",
          "description": "A GraphQL Introspection defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "types",
              "description": "A list of all types supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type"
              },
              "isDeprecated": false
            },
            {
              "name": "directives",
              "description": "'A list of all directives supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "subscriptionType",
              "description": "'If this server support subscription, the type that subscription operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "__Type",
          "fields": [
            {
              "name": "kind",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "description",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "fields",
              "args": [
                {
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean"
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field"
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "interfaces",
              "args": [],
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type"
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "possibleTypes",
              "args": [],
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type"
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "enumValues",
              "args": [
                {
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean"
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue"
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "inputFields",
              "args": [],
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue"
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "ofType",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "ENUM",
          "name": "__TypeKind",
          "description": "An enum describing what kind of type a given __Type is",
          "enumValues": [
            {
              "name": "SCALAR",
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false
            },
            {
              "name": "OBJECT",
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false
            },
            {
              "name": "INTERFACE",
              "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
              "isDeprecated": false
            },
            {
              "name": "UNION",
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false
            },
            {
              "name": "ENUM",
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false
            },
            {
              "name": "LIST",
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false
            },
            {
              "name": "NON_NULL",
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false
            }
          ]
        },
        {
          "kind": "OBJECT",
          "name": "__Field",
          "fields": [
            {
              "name": "name",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "description",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "args",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "isDeprecated",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "deprecationReason",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "__InputValue",
          "fields": [
            {
              "name": "name",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "description",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "type",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "defaultValue",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "__EnumValue",
          "fields": [
            {
              "name": "name",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "description",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "isDeprecated",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              },
              "isDeprecated": false
            },
            {
              "name": "deprecationReason",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "OBJECT",
          "name": "__Directive",
          "fields": [
            {
              "name": "name",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "description",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String"
              },
              "isDeprecated": false
            },
            {
              "name": "locations",
              "args": [],
              "type": {
                "kind": "LIST",
                "ofType": {
                  "kind": "NON_NULL",
                  "ofType": {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation"
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "args",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "LIST",
                  "ofType": {
                    "kind": "NON_NULL",
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue"
                    }
                  }
                }
              },
              "isDeprecated": false
            },
            {
              "name": "onOperation",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              },
              "isDeprecated": true,
              "deprecationReason": "Use `locations`."
            },
            {
              "name": "onFragment",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              },
              "isDeprecated": true,
              "deprecationReason": "Use `locations`."
            },
            {
              "name": "onField",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean"
              },
              "isDeprecated": true,
              "deprecationReason": "Use `locations`."
            }
          ],
          "interfaces": []
        },
        {
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "description": "An enum describing valid locations where a directive can be placed",
          "enumValues": [
            {
              "name": "QUERY",
              "description": "Indicates the directive is valid on queries.",
              "isDeprecated": false
            },
            {
              "name": "MUTATION",
              "description": "Indicates the directive is valid on mutations.",
              "isDeprecated": false
            },
            {
              "name": "FIELD",
              "description": "Indicates the directive is valid on fields.",
              "isDeprecated": false
            },
            {
              "name": "FRAGMENT_DEFINITION",
              "description": "Indicates the directive is valid on fragment definitions.",
              "isDeprecated": false
            },
            {
              "name": "FRAGMENT_SPREAD",
              "description": "Indicates the directive is valid on fragment spreads.",
              "isDeprecated": false
            },
            {
              "name": "INLINE_FRAGMENT",
              "description": "Indicates the directive is valid on inline fragments.",
              "isDeprecated": false
            },
            {
              "name": "SCHEMA",
              "description": "Indicates the directive is valid on a schema IDL definition.",
              "isDeprecated": false
            },
            {
              "name": "SCALAR",
              "description": "Indicates the directive is valid on a scalar IDL definition.",
              "isDeprecated": false
            },
            {
              "name": "OBJECT",
              "description": "Indicates the directive is valid on an object IDL definition.",
              "isDeprecated": false
            },
            {
              "name": "FIELD_DEFINITION",
              "description": "Indicates the directive is valid on a field IDL definition.",
              "isDeprecated": false
            },
            {
              "name": "ARGUMENT_DEFINITION",
              "description": "Indicates the directive is valid on a field argument IDL definition.",
              "isDeprecated": false
            },
            {
              "name": "INTERFACE",
              "description": "Indicates the directive is valid on an interface IDL definition.",
              "isDeprecated": false
            },
            {
              "name": "UNION",
              "description": "Indicates the directive is valid on an union IDL definition.",
              "isDeprecated": false
            },
            {
              "name": "ENUM",
              "description": "Indicates the directive is valid on an enum IDL definition.",
              "isDeprecated": false
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Indicates the directive is valid on an input object IDL definition.",
              "isDeprecated": false
            },
            {
              "name": "INPUT_FIELD_DEFINITION",
              "description": "Indicates the directive is valid on an input object field IDL definition.",
              "isDeprecated": false
            }
          ]
        }
      ],
      "directives": [
        {
          "name": "include",
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Included when true.",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              }
            }
          ]
        },
        {
          "name": "skip",
          "description": "Directs the executor to skip this field or fragment when the `if`'argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Skipped when true.",
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean"
                }
              }
            }
          ]
        }
      ]
    }
  }
}